openapi: 3.0.0
info:
  title: Gameified TODO API
  version: 1.0.0
  description: >
    API specification for a gameified TODO system, covering accounts, todos, stats,
    items, monsters, titles, quests, achievements, focus, and notifications.

paths:
  ########################################################
  # accounts 앱
  ########################################################
  /accounts/signup:
    post:
      tags:
        - accounts
      summary: 회원가입
      description: 새로운 사용자를 생성합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
                - email
              properties:
                username:
                  type: string
                  example: "john_doe"
                  description: "사용자 이름 (고유)"
                password:
                  type: string
                  format: password
                  example: "secret123"
                  description: "비밀번호 (최소 8자)"
                email:
                  type: string
                  format: email
                  example: "john@example.com"
                  description: "유효한 이메일 주소"
      responses:
        '201':
          description: 회원가입 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Signup successful"
                  user_id:
                    type: integer
                    example: 1
        '400':
          description: 유효성 검증 오류
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid email format"

  /accounts/login:
    post:
      tags:
        - accounts
      summary: 로그인 (JWT 발급)
      description: 사용자 인증 후 JWT 토큰을 발급합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: "john_doe"
                  description: "사용자 이름"
                password:
                  type: string
                  format: password
                  example: "secret123"
                  description: "비밀번호"
      responses:
        '200':
          description: 로그인 성공, JWT 토큰 발급
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: "eyJhbGciOiJIUz..."
                    description: "액세스 토큰"
                  refresh_token:
                    type: string
                    example: "eyJhbGciOiJIUz... (refresh)"
                    description: "리프레시 토큰"
        '401':
          description: 인증 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid username or password"

  /accounts/profile:
    get:
      tags:
        - accounts
      summary: 프로필 조회
      description: 현재 로그인된 사용자의 프로필 정보를 반환합니다.
      responses:
        '200':
          description: 프로필 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    example: "john_doe"
                    description: "사용자 이름"
                  email:
                    type: string
                    example: "john@example.com"
                    description: "사용자 이메일"
                  level:
                    type: integer
                    example: 5
                    description: "사용자 레벨"
                  abilities:
                    type: object
                    description: "사용자의 능력치"
                    properties:
                      STR:
                        type: number
                        example: 10
                      DEX:
                        type: number
                        example: 3
                      CON:
                        type: number
                        example: 7
                      INT:
                        type: number
                        example: 5
                      WIS:
                        type: number
                        example: 4
                      CHA:
                        type: number
                        example: 2
                  equipped_items:
                    type: array
                    description: "장착된 아이템 목록"
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: "Iron Sword"
                          description: "아이템 이름"
                        slot:
                          type: string
                          example: "weapon"
                          description: "아이템 슬롯"
        '401':
          description: 인증 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Authentication credentials were not provided."

  /accounts/logout:
    post:
      tags:
        - accounts
      summary: 로그아웃
      description: 현재 사용자의 세션을 종료합니다.
      responses:
        '200':
          description: 로그아웃 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Logout successful"
        '401':
          description: 인증 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Authentication credentials were not provided."

  /accounts/password-reset:
    post:
      tags:
        - accounts
      summary: 비밀번호 재설정 요청
      description: 비밀번호 재설정을 위한 이메일을 전송합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  example: "john@example.com"
                  description: "사용자의 이메일 주소"
      responses:
        '200':
          description: 비밀번호 재설정 이메일 전송 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Password reset email sent"
        '400':
          description: 유효하지 않은 이메일
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Email not found"
  ########################################################
  # todos 앱 (고도화된 인터페이스)
  ########################################################
  /todos:
    post:
      tags:
        - todos
      summary: Todo 생성
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Study Python"
                categories:
                  type: array
                  items:
                    type: string
                  example: ["study", "programming"]
                type:
                  type: string
                  enum: [check, timer]
                  example: "check"
                duration_seconds:
                  type: integer
                  example: 1800
                  description: "타이머형일 경우 지속 시간(초 단위)"
      responses:
        '201':
          description: Todo 생성 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 101
                  title:
                    type: string
                    example: "Study Python"
                  categories:
                    type: array
                    items:
                      type: string
                    example: ["study", "programming"]
                  type:
                    type: string
                    example: "check"
                  completed:
                    type: boolean
                    example: false
                  created_at:
                    type: string
                    format: date-time
                    example: "2023-01-01T12:00:00Z"

    get:
      tags:
        - todos
      summary: Todo 목록 조회
      parameters:
        - in: query
          name: completed
          schema:
            type: boolean
          required: false
          description: 완료 여부 필터
        - in: query
          name: categories
          schema:
            type: array
            items:
              type: string
          required: false
          description: 카테고리 필터
      responses:
        '200':
          description: Todo 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 101
                    title:
                      type: string
                      example: "Study Python"
                    categories:
                      type: array
                      items:
                        type: string
                      example: ["study", "programming"]
                    type:
                      type: string
                      example: "check"
                    completed:
                      type: boolean
                      example: false
                    created_at:
                      type: string
                      format: date-time
                      example: "2023-01-01T12:00:00Z"

  /todos/{id}/start:
    post:
      tags:
        - todos
      summary: 타이머 시작 (타이머형 전용)
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: 타이머 시작됨
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Timer started"
                  start_time:
                    type: string
                    format: date-time
                    example: "2023-01-01T12:30:00Z"
        '400':
          description: 이미 시작된 Todo 등 에러

  /todos/{id}/complete:
    post:
      tags:
        - todos
      summary: Todo 완료
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Todo 완료 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Todo completed"
                  gained_exp:
                    type: integer
                    example: 10
                  completed_at:
                    type: string
                    format: date-time
                    example: "2023-01-01T13:00:00Z"
        '400':
          description: 유효하지 않은 요청 등

  /todos/suggestions:
    get:
      tags:
        - todos
      summary: 맞춤형 Todo 추천
      responses:
        '200':
          description: 추천 Todo 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 201
                    title:
                      type: string
                      example: "Clean room"
                    categories:
                      type: array
                      items:
                        type: string
                      example: ["cleaning", "home"]
                    reason:
                      type: string
                      example: "Based on your preference..."

  ########################################################
  # stats 앱
  ########################################################
  /stats/user-abilities:
    get:
      tags:
        - stats
      summary: 사용자 능력치 조회
      responses:
        '200':
          description: 능력치 목록
          content:
            application/json:
              schema:
                type: object
                properties:
                  STR:
                    type: number
                    example: 10
                  DEX:
                    type: number
                    example: 3
                  CON:
                    type: number
                    example: 7
                  INT:
                    type: number
                    example: 5
                  WIS:
                    type: number
                    example: 4
                  CHA:
                    type: number
                    example: 2

  /stats/user-category-stats:
    get:
      tags:
        - stats
      summary: 카테고리별 경험치 조회
      responses:
        '200':
          description: 카테고리별 Exp 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    category:
                      type: string
                      example: "업무/프로젝트"
                    total_exp:
                      type: integer
                      example: 250
                    current_tier:
                      type: string
                      example: "tier2"  # or 'silver', etc.
  ########################################################
  # items 앱
  ########################################################
  /items/inventory:
    get:
      tags:
        - items
      summary: 인벤토리 조회
      description: 사용자가 소유한 장비 목록을 조회합니다.
      responses:
        '200':
          description: 인벤토리 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: "Iron Sword"
                    equipment_type:
                      type: string
                      example: "weapon"
                    slot:
                      type: string
                      example: "weapon"
                    main_ability:
                      type: string
                      example: "STR"
                    sub_ability:
                      type: string
                      example: "DEX"
                    is_equipped:
                      type: boolean
                      example: false

  /items/inventory/{id}/upgrade:
    post:
      tags:
        - items
      summary: 장비 업그레이드
      description: 사용자가 소유한 장비를 업그레이드합니다.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: 업그레이드할 장비의 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                upgrade_materials:
                  type: array
                  items:
                    type: string
                  example: ["Iron Ore", "Magic Stone"]
      responses:
        '200':
          description: 업그레이드 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Equipment upgraded successfully"
                  new_stats:
                    type: object
                    properties:
                      main_ability:
                        type: string
                        example: "STR"
                      main_ability_value:
                        type: integer
                        example: 15
                      sub_ability:
                        type: string
                        example: "DEX"
                      sub_ability_value:
                        type: integer
                        example: 8
        '400':
          description: 업그레이드 실패 (재료 부족 등)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Not enough materials"

  ########################################################
  # shop 앱
  ########################################################
  /items/shop:
    get:
      tags:
        - shop
      summary: 상점 장비 목록 조회
      description: 상점에서 구매 가능한 장비 목록을 조회합니다.
      responses:
        '200':
          description: 상점 장비 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 101
                    name:
                      type: string
                      example: "Steel Sword"
                    price:
                      type: integer
                      example: 500
                    equipment_type:
                      type: string
                      example: "weapon"
                    slot:
                      type: string
                      example: "weapon"
                    main_ability:
                      type: string
                      example: "STR"
                    sub_ability:
                      type: string
                      example: "DEX"

  /items/shop/{id}/buy:
    post:
      tags:
        - shop
      summary: 장비 구매
      description: 상점에서 장비를 구매합니다.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: 구매할 장비의 ID
      responses:
        '200':
          description: 구매 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Item purchased successfully"
                  item_id:
                    type: integer
                    example: 101
        '400':
          description: 구매 실패 (잔액 부족 등)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Not enough gold"

  ########################################################
  # monsters 앱
  ########################################################
  /monsters/daily:
    get:
      tags:
        - monsters
      summary: 오늘의 몬스터 조회 (목록)
      responses:
        '200':
          description: 현재 선택 가능한 몬스터 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    monster_id:
                      type: integer
                      example: 5
                    name:
                      type: string
                      example: "Slime"
                    description:
                      type: string
                      example: "A weak slime monster"
    post:
      tags:
        - monsters
      summary: 오늘 전투할 몬스터 선택
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                monster_id:
                  type: integer
                  example: 5
      responses:
        '200':
          description: 몬스터 선택 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Monster selected"
        '400':
          description: 이미 선택된 경우 등

  /monsters/daily/attack:
    post:
      tags:
        - monsters
      summary: 몬스터 공격
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                damage:
                  type: integer
                  example: 50
                # 혹은 todo_id / skill_id 등 추가
      responses:
        '200':
          description: 공격 후 몬스터의 상태
          content:
            application/json:
              schema:
                type: object
                properties:
                  monster_hp:
                    type: integer
                    example: 450
                  status:
                    type: string
                    example: "ongoing"
        '400':
          description: 전투 중이 아님, 또는 이미 몬스터 처치됨 등

  /monsters/daily/retreat:
    post:
      tags:
        - monsters
      summary: 전투 종료 처리 (보상 지급)
      responses:
        '200':
          description: 전투 종료, 보상 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Battle ended"
                  gained_exp:
                    type: integer
                    example: 50
                  status:
                    type: string
                    example: "success"
        '400':
          description: 이미 종료된 전투 등

  ########################################################
  # titles 앱
  ########################################################
  /titles/my:
    get:
      tags:
        - titles
      summary: 내 칭호 목록 조회
      responses:
        '200':
          description: 획득한 칭호 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    title_id:
                      type: integer
                      example: 2
                    name:
                      type: string
                      example: "Bronze Worker"
                    acquired_date:
                      type: string
                      example: "2025-01-01"

  /titles/select:
    post:
      tags:
        - titles
      summary: 대표 칭호 설정
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title_id:
                  type: integer
                  example: 2
      responses:
        '200':
          description: 대표 칭호 설정됨
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Title selected"
        '400':
          description: 미획득 칭호 등

  ########################################################
  # quests 앱 (구현 안함, 예시만)
  ########################################################
  /quests:
    get:
      tags:
        - quests
      summary: 퀘스트 목록 조회
      responses:
        '200':
          description: 퀘스트 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    quest_id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: "First Blood"
                    description:
                      type: string
                      example: "Defeat your first monster"

  /quests/{id}/accept:
    post:
      tags:
        - quests
      summary: 퀘스트 수락
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: 퀘스트 수락 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Quest accepted"
        '400':
          description: 이미 수락 중인 퀘스트 등

  ########################################################
  # achievements 앱 (구현 안함, 예시만)
  ########################################################
  /achievements:
    get:
      tags:
        - achievements
      summary: 업적 목록 조회
      responses:
        '200':
          description: 업적 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    achievement_id:
                      type: integer
                      example: 10
                    name:
                      type: string
                      example: "Daily Streak"
                    description:
                      type: string
                      example: "Complete a Todo every day for 7 days"

  /achievements/{id}/claim:
    post:
      tags:
        - achievements
      summary: 업적 보상 수령
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: 보상 수령 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Reward claimed"
                  reward_info:
                    type: string
                    example: "You received 100 gold"
        '400':
          description: 이미 보상 수령함 등

  ########################################################
  # focus 앱 (구현 안함, 예시만)
  ########################################################
  /focus/sessions/start:
    post:
      tags:
        - focus
      summary: 집중 세션 시작
      responses:
        '200':
          description: 세션 시작 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  session_id:
                    type: integer
                    example: 11
                  message:
                    type: string
                    example: "Focus session started"

  /focus/sessions/{id}/end:
    post:
      tags:
        - focus
      summary: 집중 세션 종료
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: 세션 종료 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Focus session ended"
                  duration:
                    type: integer
                    example: 1200
        '400':
          description: 이미 종료된 세션 등

  ########################################################
  # notifications 앱 (구현 안함, 예시만)
  ########################################################
  /notifications:
    get:
      tags:
        - notifications
      summary: 알림 목록 조회
      responses:
        '200':
          description: 알림 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    notification_id:
                      type: integer
                      example: 99
                    message:
                      type: string
                      example: "You leveled up!"
                    is_read:
                      type: boolean
                      example: false

  /notifications/mark-read:
    post:
      tags:
        - notifications
      summary: 알림 읽음 처리
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                notification_ids:
                  type: array
                  items:
                    type: integer
                  example: [99, 100]
      responses:
        '200':
          description: 읽음 처리 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Notifications marked as read"
        '400':
          description: 잘못된 알림 ID 등

#################################
# 보안 스키마(JWT 예시) 정의
#################################
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
